localhost == 내 컴퓨터의 주소
8080 == 포트 번호 (우리집의 8080방)

8080방 안에는 스프링 부트가 동작(톰캣이 8080방 안에서 수행)

localhost :8080/hello.html

파일 명을 직접 명시했을때 resouces의 static 폴더 안에서 기본적으로 찾음

웹서비스는 클라이언트와 서버의 요청과 응답으로 동작함.

MVC 패턴

View Templates	==	웹페이지의 변수를 활용
(화면을 담당)
(컨트롤러 처리 과정)
(모델 데이터 관리)

MVC 패턴	==	분야 별 담당자를 나눔
Model View Controller

mustache		==	viewtemplate 엔진

스프링 부트는 서버의 역할을 했음

모델 뷰 컨트롤러의 유기적 역할 분담이 존재함

컨트롤러		==	클라이언트로 부터 요청
뷰		==	최종 페이지를 만듦
모델		==	최종 페이지에 쓰일 데이터를 뷰에 전달

레이아웃을 어떻게 잡느냐에 따라서 다른 느낌을 줄 수 있음

Layout

header	(사이트 안내 nav)
content	(핵심내용)				샌드위치 구조
footer	(사이트 정보 information)





1. MVC의 역할과 실행 흐름 정리하기.

2. 레이아웃 나누기 연습(화면 요소를 배치하는 방법)
