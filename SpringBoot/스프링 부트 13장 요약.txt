13장 테스트 코드 작성하기

1. 테스트

프로그램의 품질을 검증하는 것 

의도대로 프로그램이 잘 작동하는지 확인하는 과정

2. 테스트 코드 작성법

테스트 코드는 3단계로 작성

	1. 예상 데이터 작성

	2. 실제 데이터 작성

	3. 예상 데이터와 실제 데이터 비교해 검증

프로그램 코드가 테스트를 통과하면 지속적인 리팩터링으로 코드를 개선하고 통과하지 못하면
잘못된 부분을 찾아 고치는 디버깅을 함.


3. 테스트 케이스

테스트는 다양한 경우를 대비해 작성

이를 테스트 케이스라고 함

테스트 케이스는 성공할 뿐만 아니라 실패할 경우까지 고려

더 나아가 성공 1, 성공 2 , ..., 실패 1, 실패 2 와 같이 다양한 상황을 예상해 세부적으로 작성

4. test 디렉토리 위치

test 디렉토리는 main 디렉토리 아래에 만들어짐

기존 자바 코드가 담긴 main > java 디렉토리와 데칼코마니처럼  test > java 디렉토리로 생성 됨

5. @SpringBootTest

스프링 부트와 해당 클래스를 연동해 테스트할 때 사용하는 어노테이션

테스트 코드에서 스프링 부트가 관리하는 다양한 객체를 주입받을 수 있음

6. @Test

해당 메소드가 테스트를 위한 코드라고 선언하는 어노테이션

7. 테스트 케이스의 특랜잭션 처리

테스트 시 데이터를 조회하는 것이 아닌 조작 (생성/수정/삭제)하는 작업을 했다면

테스트를 마치고 데이터를 롤백해야 함.

롤백하지 않으면 테스트 수행으로 조작된 데이터가 남아 문제를 일으킬 수 있음

롤백은 테스트 메소드 위에 @Transactional 어노테이션을 붙여 해당 메소드를 트랜잭션 처리해주면 됨.